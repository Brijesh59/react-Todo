{"version":3,"sources":["components/Header.js","components/CheckBox.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","CheckBox","_ref","onChange","checked","id","Fragment","type","htmlFor","App","_useState","useState","_useState2","Object","slicedToArray","todosList","setTodosList","_useState3","_useState4","newtodo","setNewTodo","useEffect","list","localStorage","getItem","length","JSON","parse","generateUniqueId","todo","Math","random","components_Header","onSubmit","event","preventDefault","some","name","newTodosList","concat","toConsumableArray","done","setItem","stringify","autoFocus","placeholder","target","value","react_flip_move_es","map","todoIndex","key","components_CheckBox","disableTodo","disabled","style","textDecoration","color","onClick","stopPropagation","currentTarget","updateTodo","index_es","cursor","marginRight","icon","faTimes","splice","removeTodo","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.370df363.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h2>/react-todo</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport '../styles.css'\n\nfunction CheckBox({onChange, checked, id}) {\n  return (\n    <>\n      <input type=\"checkbox\" id={id} onChange={onChange} checked={checked}/>\n      <label htmlFor={id}></label>\n    </>\n  );\n}\n\nexport default CheckBox;","import React, { useState, useEffect } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\nimport CheckBox from \"./components/CheckBox\";\n\nconst App = () => {\n  const [todosList, setTodosList] = useState([]);\n  const [newtodo, setNewTodo] = useState(\"\");\n\n  useEffect(()=>{\n    const list = localStorage.getItem('todosList')\n    list && list.length>0 && setTodosList(JSON.parse(list))\n  }, [])\n\n  const handleChange = ({ target: { value: todo } }) => {\n    setNewTodo(todo);\n  };\n\n  const addTodos = event => {\n    event.preventDefault();\n    if (!newtodo) return;\n    if(todosList.some(todo=>todo.name === newtodo)) return;\n    const newTodosList = [\n      ...todosList,\n      { id: generateUniqueId(newtodo), name: newtodo, done: false }\n    ];\n    setTodosList(newTodosList);\n    setNewTodo(\"\");\n    localStorage.setItem('todosList', JSON.stringify(newTodosList))\n  };\n\n  const removeTodo = (event, todoIndex) => {\n    event.stopPropagation();\n    const newTodosList = [...todosList];\n    newTodosList.splice(todoIndex, 1);\n    setTodosList(newTodosList);\n    localStorage.setItem('todosList', JSON.stringify(newTodosList))\n  };\n\n  const updateTodo = (event, todoIndex) => {\n    // event.persist();\n    event.stopPropagation();\n    const newTodosList = [...todosList];\n    newTodosList[todoIndex].name = event.currentTarget.value;\n    setTodosList(newTodosList);\n    localStorage.setItem('todosList', JSON.stringify(newTodosList))\n  };\n\n  const disableTodo = todoIndex => {\n    const newTodosList = [...todosList];\n    newTodosList[todoIndex].done = !newTodosList[todoIndex].done;\n    setTodosList(newTodosList);\n    localStorage.setItem('todosList', JSON.stringify(newTodosList))\n  };\n\n  const generateUniqueId = todo => {\n    const length = todo.length;\n    const id = Math.random() * length;\n    return id;\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={addTodos}>\n        <input\n          autoFocus\n          placeholder=\"add todo\"\n          onChange={handleChange}\n          value={newtodo}\n        />\n      </form>\n      <FlipMove>\n        {todosList.map((todo, todoIndex) => (\n          <li key={todo.id}>\n            <CheckBox \n              onChange={() => disableTodo(todoIndex)} \n              checked={todo.done}\n              id={todo.name} />\n            <input\n              disabled={todo.done}\n              value={todo.name}\n              style={{\n                textDecoration: todo.done ? \"line-through\" : null,\n                color: todo.done ? \"grey\" : \"#000\"\n              }}\n              onClick={event => event.stopPropagation()}\n              onChange={event => updateTodo(event, todoIndex)}\n            />\n            <FontAwesomeIcon\n              style={{ color: \"red\", cursor: \"pointer\", marginRight: 10 }}\n              icon={faTimes}\n              onClick={event => removeTodo(event, todoIndex)}\n            />\n          </li>\n        ))}\n      </FlipMove>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}